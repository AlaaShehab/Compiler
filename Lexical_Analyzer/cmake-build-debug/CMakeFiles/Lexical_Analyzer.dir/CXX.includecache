#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

D:/Projects/Compiler/Lexical_Analyzer/DFANode.cpp
DFANode.h
D:/Projects/Compiler/Lexical_Analyzer/DFANode.h

D:/Projects/Compiler/Lexical_Analyzer/DFANode.h
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h
list
-

D:/Projects/Compiler/Lexical_Analyzer/LexicalRuleParser.cpp
LexicalRuleParser.h
D:/Projects/Compiler/Lexical_Analyzer/LexicalRuleParser.h
string.h
-
iostream
-
fstream
-
regex
-
stack
-
vector
-
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h

D:/Projects/Compiler/Lexical_Analyzer/LexicalRuleParser.h
string
-
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h
stack
-
vector
-

D:/Projects/Compiler/Lexical_Analyzer/Node.cpp
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h
string
-
list
-
Transition.h
D:/Projects/Compiler/Lexical_Analyzer/Transition.h

D:/Projects/Compiler/Lexical_Analyzer/Node.h
string
-
list
-
vector
-
Transition.h
D:/Projects/Compiler/Lexical_Analyzer/Transition.h

D:/Projects/Compiler/Lexical_Analyzer/Transition.cpp
Transition.h
D:/Projects/Compiler/Lexical_Analyzer/Transition.h
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h
string.h
-
iostream
-

D:/Projects/Compiler/Lexical_Analyzer/Transition.h
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h
string
-

D:/Projects/Compiler/Lexical_Analyzer/main.cpp
iostream
-
string
-
fstream
-
list
-
regex
-
Node.h
D:/Projects/Compiler/Lexical_Analyzer/Node.h
Transition.h
D:/Projects/Compiler/Lexical_Analyzer/Transition.h

